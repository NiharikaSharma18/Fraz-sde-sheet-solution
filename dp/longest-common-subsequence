class Solution {
public:

int lcsc(string &s1,string &s2,int in1,int in2,vector<vector<int>> &dp ){
    
    if(in1<0 || in2<0)
    return 0;

    if(dp[in1][in2]!=-1){
        return dp[in1][in2];
    }
    if(s1[in1]==s2[in2])
    return dp[in1][in2]=1+lcsc(s1,s2,in1-1,in2-1,dp);
else
 return dp[in1][in2]=max(lcsc(s1,s2,in1,in2-1,dp),lcsc(s1,s2,in1-1,in2,dp));
}
    int longestCommonSubsequence(string text1, string text2) {
         int n=text1.size();
        int m=text2.size();
        vector<vector<int>>  dp(n,vector<int> (m,-1));
       
        return lcsc(text1,text2,n-1,m-1,dp);
    }
}
