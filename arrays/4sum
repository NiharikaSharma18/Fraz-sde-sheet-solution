class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
      sort(nums.begin(), nums.end());
        vector<vector<int>> result;
        set<vector<int>> solutions;
        for (int i = 0; i < nums.size(); i++) {
            for (int j = i + 1; j < nums.size(); j++) {
                int h = j + 1;
                int k = nums.size() - 1;
                while (h < k) {
                    long long sum = (long long) nums[i] + nums[j] + nums[h] + nums[k];
if (sum > LLONG_MAX) {
    break;
}
                    if (sum == target) {
                        solutions.insert({nums[i], nums[j], nums[h], nums[k]});
                        h++;
                        k--;
                    } else if (sum < target) {
                        h++;
                    } else {
                        k--;
                    }
                }
            }
        }
        for (const auto& sol : solutions) {
            result.push_back(sol);
        }
        return result;
    }
};
